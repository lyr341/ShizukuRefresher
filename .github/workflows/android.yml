name: Android CI
on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      # 先装 cmdline-tools，再用 sdkmanager
      - name: Install Android SDK cmdline-tools
        run: |
          set -euxo pipefail
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -sLo /tmp/cli.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q /tmp/cli.zip -d /tmp/cli
          mv /tmp/cli/cmdline-tools "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses

      - name: Install Android SDK components
        run: |
          set -euxo pipefail
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" \
            "platform-tools" \
            "build-tools;34.0.0" \
            "platforms;android-34"

      # —— 诊断：看看仓库和子目录里到底有什么 ——
      - name: List repo root
        run: |
          pwd
          ls -la

      - name: List NavSwitcher contents
        run: |
          ls -la NavSwitcher || true
          ls -la NavSwitcher/gradle || true
          ls -la NavSwitcher/gradle/wrapper || true

      # 给 gradlew 授权（存在才授权，不存在不报错）
      - name: Make gradlew executable (if present)
        run: |
          if [ -f NavSwitcher/gradlew ]; then
            chmod +x NavSwitcher/gradlew
          fi

      # 打印 Gradle 环境：优先用 wrapper；没有就用全局 gradle
      - name: Print Gradle env
        run: |
          set -euxo pipefail
          if [ -x NavSwitcher/gradlew ]; then
            (cd NavSwitcher && ./gradlew -v)
          else
            echo "::warning::gradlew not found; using global Gradle"
            gradle -v
          fi

      # 干净构建
      - name: Clean
        run: |
          set -euxo pipefail
          if [ -x NavSwitcher/gradlew ]; then
            (cd NavSwitcher && ./gradlew clean)
          else
            (cd NavSwitcher && gradle clean)
          fi

      # 关键：把日志 tee 到文件，失败也能分析
      - name: Build Debug APK (full log to file)
        env:
          TERM: xterm-256color
        run: |
          set -euxo pipefail
          if [ -x NavSwitcher/gradlew ]; then
            (cd NavSwitcher && ./gradlew :app:assembleDebug --stacktrace --info --warning-mode all) 2>&1 | tee NavSwitcher/buildlog.txt
          else
            (cd NavSwitcher && gradle :app:assembleDebug --stacktrace --info --warning-mode all) 2>&1 | tee NavSwitcher/buildlog.txt
          fi

      # 失败时把 Kotlin “e: …” 错误行单独抠出来，便于你定位
      - name: Extract Kotlin errors (grep)
        if: failure()
        run: |
          echo "===== Kotlin compiler errors (grep '^e: ') ====="
          grep -n "^e: " NavSwitcher/buildlog.txt || true
          echo "===== End of Kotlin errors ====="

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: buildlog
          path: NavSwitcher/buildlog.txt

      - name: Upload debug APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: NavSwitcher/app/build/outputs/apk/debug/*.apk
